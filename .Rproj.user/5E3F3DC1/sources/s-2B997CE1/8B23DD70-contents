---
title: "main_analyses"
author: "ASM"
date: "09/05/2022"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(see)
library(patchwork)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(mgcv)
library(gamm4)
library(broom)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(ggExtra)
library(sjPlot)
library(DHARMa)
library(performance)
library(broom.mixed)
library(rempsyc)
```

##------------------- Load the cleaned data & prepare for analyses-------------------------------------##

```{r}
load(here("merged_data_sets/arch_final.Rda"))

arch_re_zero<- arch_final%>%
  group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
  mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
  group_by(studio_project_name)%>%
  mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
                                studio_project_name=="LearnMix-36"~trial_from_zero-4500,
                                studio_project_name=="Mix-20"~trial_from_zero-5400,
                                studio_project_name=="Mix-14"~trial_from_zero-5400,
                                studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
  ungroup()%>%
  rename(target_side=target, distractor_side=distractor,
         gaze_point_x= gaze_point_x_adc_spx, 
         gaze_point_y = gaze_point_y_adc_spx)%>%
  filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
  filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
  filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
  filter(!is.na(gaze_point_y))%>%
  filter(!is.na(validity_left)) %>%
  filter(!is.na(validity_right)) %>%
  filter(validity_left<= 1)%>%
  filter(validity_right <= 1)%>%
  mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE, 
                            TRUE~FALSE))

```


##-------------------Create trial language column to describe the language in which the babies were tested on-------------------------------------##
```{r}
arch_re_zero <- arch_re_zero%>%
  ungroup()%>%
  group_by(studio_test_name, eng_exp, fre_exp)%>%
  mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
                                str_detect(studio_test_name, "F")~ "french"))
```


##-------------------center age and experience-------------------------------------##
```{r}
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
  mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
                                        trial_lang == "french" ~ fre_exp)) %>%
  mutate(exp_target_lang_prop = exp_to_target_lang/100)

#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57

 arch_re_zero_c<- arch_re_zero %>%
  mutate(age_centered = age_months-25) %>%
   mutate(exp_centered =exp_target_lang_prop - .50)

```


##-------------------Data preparation for linear mixed models (LMMs)-------------------------------------##
```{r}
for_lmm <- arch_re_zero_c

for_lmm <- for_lmm %>%
  filter(noun_onset>= 360 & noun_onset <= 3000)%>%
  group_by(recording_name, subject_id, trial_number, media_name, age_centered,exp_centered)%>%
  summarise(samples_total=sum(target==TRUE, target==FALSE ),
            samples_target=sum(target))%>%
  mutate(prop_looking= samples_target/samples_total) 
```

##-------------------Constructing 4 LMMs-------------------------------------##
```{r}
#1) Maturation only
lmm_age_only <- lmer (prop_looking ~ age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_age_only)
#2) Experience only
lmm_experience_only <- lmer (prop_looking ~ exp_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_experience_only)
#3)Accumulator model
lmm_accumulator <- lmer (prop_looking ~ exp_centered * age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_accumulator)
#4) Additive Model
lmm_aditive <- lmer (prop_looking ~ exp_centered + age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_aditive) #<- SELECTED MODEL

```

##-------------------LMM comparison-------------------------------------##
```{r}
anova(lmm_aditive, lmm_experience_only)
anova(lmm_aditive, lmm_age_only)
anova(lmm_aditive, lmm_accumulator)
anova(lmm_accumulator, lmm_experience_only)
anova(lmm_accumulator, lmm_age_only)


#to calculate r squared equivalent for lmm based on Sonderegger et al., 2018
cor(predict(lmm_age_only), for_lmm$prop_looking)^2  # age only= 0.248
cor(predict(lmm_experience_only), for_lmm$prop_looking)^2 #experience only= .255
cor(predict(lmm_accumulator), for_lmm$prop_looking)^2 #accumulator =.244
cor(predict(lmm_aditive), for_lmm$prop_looking)^2 #aditive =.244 

```

##-------------------LMM model evaluation-------------------------------------##
```{r}
res_simulation  <- simulateResiduals(fittedModel = lmm_aditive , plot = T)

plotQQunif(res_simulation)
plotResiduals(res_simulation)

testUniformity(res_simulation) #One-sample kolmogorov-Smirov test p-value= <.001
testOutliers(res_simulation)
testDispersion(res_simulation)
testZeroInflation(res_simulation)
plot(res_simulation, quantreg = T)

check_model(lmm_aditive, panel=F)
```

##------------------- LMM standardied coefficient calculation-------------------------------------##
```{r}
lm.beta.lmer <- function(mod) {
  b <- fixef(mod)[-1]
  sd.x <- apply(getME(mod,"X")[,-1],2,sd)
  sd.y <- sd(getME(mod,"y"))
  b*sd.x/sd.y
}

s_lm.beta.lmer <- function(mod) { 
  b <- fixef(mod)[-1]; 
  sd.x <- apply(matrix(getME(mod,"X")[,-1]),2,sd);
  sd.y <- sd(getME(mod,"y")); b*sd.x/sd.y; }


lm.beta.lmer(lmm_aditive)
lm.beta.lmer(lmm_accumulator)
s_lm.beta.lmer(lmm_age_only)
s_lm.beta.lmer(lmm_experience_only)

```

