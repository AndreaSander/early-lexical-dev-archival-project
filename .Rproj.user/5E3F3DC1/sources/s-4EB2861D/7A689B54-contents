library(here)
library(tidyverse)
library(dplyr)
library(readxl)
library(lubridate)
library(janitor)
library(broom)

#Step 1/n call in first and second entry data sets
first_entry <- read_excel("First entry/2021_family_strategies_first_entry.xlsx")
second_entry <- read_excel("Second entry/2021_family_strategies_second_entry.xlsx")

#Step 2/n check the column names to make sure we can compare the data sets
#colnames(first_entry)
#colnames(second_entry)

#Step 3/n fix column names so that the data sets are comparable
second_entry <- rename(second_entry, "leq_date" = "leq_date\r\n(YYYY-MM-DD)")
second_entry <- rename(second_entry, "part_id" = "part_id\r\n(SXX)")
second_entry <- rename(second_entry, "childcare_start" = "childcare_start\r\n(age in months)")
second_entry <- rename(second_entry, "childcare_switch" = "childcare_switch\r\n(\"y\" or blank cell)")

#step 4/n fix date column on entry 2 to be the same type of column as in entry 1
leq_date_2 <- openxlsx::convertToDate(second_entry$leq_date)
second_entry <- second_entry %>%
  mutate(leq_date_2)
                                    
#Step 5/n select only relevant columns of each data frame #Not sure you need other l1 and such
first_entry_sub <- first_entry %>%
  select(-c(26,27,28,29,30,31)) %>%
  mutate(baby_id = as.character(baby_id)) 

#Step 6/n transform columns to be the same type (e.g. both "baby_id" columns should be character)

second_entry_sub <- second_entry %>%
  select(-c(2,26,27,28,29,30,31,32,33)) %>%  
  mutate(exp_l1 = as.numeric(exp_l1)) %>%
  mutate(exp_l2 = as.numeric(exp_l2)) %>%
  rename( "leq_date" = "leq_date_2")

#Step 7/n reorder columns so that they are in the same order in both data frames
second_entry_sub<- second_entry_sub [, c (1, 30, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
                             21, 22, 23, 24, 25, 26, 27, 28, 29)]

#Step 8/n change baby IDs that had mistakes in them
second_entry_sub$baby_id[second_entry_sub$baby_id== "46738"] <- "46739"
second_entry_sub$baby_id[second_entry_sub$baby_id== "48576"] <- "48976"
second_entry_sub$baby_id[second_entry_sub$baby_id== "43456"] <- "42456"
second_entry_sub$baby_id[second_entry_sub$baby_id== "44740"] <- "44730"
second_entry_sub$baby_id[second_entry_sub$baby_id== "42626"] <- "42628 "
second_entry_sub$baby_id[second_entry_sub$baby_id== "44452"] <- "49452"
second_entry_sub$baby_id[second_entry_sub$baby_id== "45749"] <- "45739"
second_entry_sub$baby_id[second_entry_sub$baby_id== "49764"] <- "49264"
second_entry_sub$baby_id[second_entry_sub$baby_id== "48216"] <- "48246"
first_entry_sub$baby_id[first_entry_sub$baby_id=="53289"]<-"53298"




#step 9/n remove rows that were NAs because the subject didnt show up
second_entry_sub <- second_entry_sub[-c(481),]
second_entry_sub <- second_entry_sub[-c(520),]
second_entry_sub <- second_entry_sub[-c(522),]
second_entry_sub <- second_entry_sub[-c(542),]

#Step /n check differences between the data sets

check<- anti_join(first_entry_sub, second_entry_sub, by= c("baby_id", "leq_date", "study",
                                                           "part_id", "l1", "exp_l1", "l2", 
                                                           "exp_l2", "l3", "exp_l3", "l4", "exp_l4",
                                                           "care1_l1", "care1_l2", "care1_l3", "care1_l4",
                                                           "care2_l1", "care2_l2", "care2_l3", "care2_l4",
                                                           "childcare_l1", "childcare_l2", "childcare_l3",
                                                           "childcare_start", "childcare_switch"))
#Manybabies 12 s19 might cause an issue because the row was missing but baby exists so I added to entry 1

#Fix other mistakes found later
first_entry_sub$baby_id[first_entry_sub$baby_id== "44492"] <- "44442"
first_entry_sub$baby_id[first_entry_sub$baby_id== "44824"] <- "44924"




#anonimize baby ID's before saving checked dataframe (saving dataframe after double data entry)

final_fam_str<- first_entry_sub %>%
  mutate(baby_id = as.numeric(as.character(baby_id)))%>%
  mutate(anon_baby_id = (baby_id+7)*120)

#run this code to get a list of the relation between original baby id and anonymized baby id
baby_trace <- final_fam_str %>%
  select(c(baby_id, anon_baby_id))

  save(baby_trace, file = here("baby_trace.Rda"))

#remove original baby id to keep the dataframe anonymized

final_fam_str<- final_fam_str%>%
  select(-baby_id)

  save(final_fam_str, file = here("final_fam_str.Rda"))

##-------------------------Longitudinal data frame----------------------------##
#Create dataframe of babies who participated in more than one study 
W_dup<- first_entry %>% 
  group_by(baby_id) %>% filter( n() > 1 )

#Organize duplicates dataframe to see all the dates the baby came together in the column
W_dup_ord <- W_dup[order(W_dup$baby_id, W_dup$leq_date),]

#Get rid of the babies that came for two studies at the same date and keep only babies with more than entry (longitunidal data)
W_dup_ord<- W_dup_ord %>%
  mutate(tested_same_date = case_when(duplicated(baby_id) & duplicated(leq_date)~"yes",
                                      TRUE~"no"))%>%
  filter(tested_same_date =="no") %>%
  group_by(baby_id) %>% filter( n() > 1 ) 

#Get rid of babies that came for the two studies with less than 6 months appart.
test_3<- W_dup_ord %>%
 group_by(baby_id) %>% mutate(visit_number = row_number())%>%
mutate(date_diff = leq_date - lag(leq_date, default = first(leq_date))) ## not working 

##try this all_data <- all_data%>%
#mutate(age= interval(start= birth_date, end=leq_date)/                      
 #        duration(n=1, unit="months"))  
##you would have to make the data wide like ... date of visit 1, date of visit 2, date of visit 3 pivot wider
  

#Add the strategies to be able to build a sankey graph later
W_dup_ord <- W_dup_ord %>%
  mutate(strategy=case_when(
    care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OPOL_S",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_S",
    care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
    care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
    care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
    care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
    care1_l1== "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
    care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
    care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 == "regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
    care1_l1== "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly" ~ "Biling1",
    care1_l1== "regularly" & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
    care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
    care1_l1 == "regularly" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
    care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
    care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "regularly" & care2_l2=="regularly" ~ "Biling1",
    care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("regularly", "sometimes") & care2_l2 %in% c("never", "NA") ~ "Biling1",
    care1_l1 == "sometimes" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2 %in% c("regularly", "sometimes") ~ "Biling1",
    care1_l1 %in% c("regularly", "sometimes") & care1_l2 %in% c("never", "NA") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
    care1_l1 %in% c("never", "NA") & care1_l2 %in% c("regularly", "sometimes") & care2_l1 == "sometimes" & care2_l2=="sometimes" ~ "Biling1",
    care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1=="regularly" & care2_l2 %in% c("never", "NA") ~ "Biling1",
    care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" & care2_l2=="sometimes" ~ "Biling1",
    care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1 %in% c("never", "NA")& care2_l2=="regularly" ~ "Biling1",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="sometimes" & care2_l2=="regularly" ~ "Biling1",
    care1_l1%in% c("regularly", "sometimes") & care1_l2%in% c("regularly", "sometimes") & care2_l1%in% c("regularly", "sometimes") &care2_l2%in% c("regularly", "sometimes") ~ "Biling2",
    care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2=="regularly"~ "OPOL_F",
    care1_l1=="regularly" & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") &care2_l2=="regularly"~ "OPOL_F",
    care1_l1=="sometimes" & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OPOL_F",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1=="regularly" &care2_l2=="sometimes"~ "OPOL_F",
    care1_l1=="regularly" & care1_l2 %in% c("never", "NA") & care2_l1=="regularly" &care2_l2 %in% c("never", "NA")~ "OLH",
    care1_l1 %in% c("never", "NA") & care1_l2=="regularly" & care2_l1 %in% c("never", "NA") & care2_l2=="regularly"~ "OLH",
    care1_l1=="sometimes" & care1_l2 %in% c("never", "NA") & care2_l1=="sometimes" &care2_l2 %in% c("never", "NA")~ "OLH",
    care1_l1 %in% c("never", "NA") & care1_l2=="sometimes" & care2_l1 %in% c("never", "NA") & care2_l2=="sometimes"~ "OLH",
    care1_l1 %in% c("never", "NA") & care1_l2 %in% c("never", "NA") & care1_l3 %in% c("never", "NA") & care1_l4 %in% c("never", "NA") ~ "Single",
    care2_l1 %in% c("never", "NA") & care2_l2 %in% c("never", "NA") & care2_l3 %in% c("never", "NA") & care2_l4 %in% c("never", "NA") ~ "Single"
    
  ))


length(unique(W_dup$baby_id)) #96 babies that came at least more than once

#CogControl7 S22 the baby ID is unclear ----> 45370 RESOLVED
#Manybabies12 S41 baby ID SHOULD BE 48263 in second entry

#Cog control 20 s19 in entry 2 there is no date but only after the transformation. Something happened when I change the date variable type

#Personally check and scan cogmisp 24 subjects 23 and 20

#Duplicates. ##----------
#Check cogcontrol 7 subjects 15 and 16
#s15--> 45233= Kian Keefe 
#s16-->45233 WHY?. S16 SHOULD BE ALESSIA DELLA VECCHIA 45314




