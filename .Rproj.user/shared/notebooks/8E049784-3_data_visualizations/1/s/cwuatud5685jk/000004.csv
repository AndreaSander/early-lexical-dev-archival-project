"0","## Time course fix? not average but prop looking"
"0",""
"0","tc2 <- arch_re_zero%>%"
"0","  mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~"".25"","
"0","                              exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~"".5"","
"0","                              exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~"".75"","
"0","                              exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~""1""))%>%"
"0","  mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~""14-20 (m)"","
"0","                             age_months >=21 & age_months<=28.9~""21-28 (m)"","
"0","                             age_months >=29 & age_months<=36.9~""29-36 (m)"","
"0","                             age_months>=37 & age_months<=48.9~""37-48 (m)""))"
"0","tc2%>%"
"0","  filter(noun_onset>=360 & noun_onset<=3000)%>%"
"0","  group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%"
"0","  summarise(samples_total=sum(target==TRUE, target==FALSE ),"
"0","            samples_target=sum(target))%>%"
"0","  mutate(prop_looking= samples_target/samples_total)%>%"
"0","  ggplot(aes(x=interval, y=prop_looking, color=exp_bins))+"
"0","  geom_line(size=1)+"
"0","  #    stat_summary(aes(y = looking), fun.y=mean, colour=""black"", geom=""line"", size=0.8, alpha=0.5)+"
"0","  facet_grid(~age_bins)+"
"0","  scale_y_continuous(limits = c(0,1))+"
"0","  labs(x=""Time from noun onset (ms)"", "
"0","       y= ""Proportion looking to target"")+"
"0","  ggtitle(""Time series of infant looking by age group divided by experience"")+"
"0","  scale_color_manual(name= ""Exposure bins (proportion)"", values = c(""#feb24c"", ""#ef6548"", ""#d7301f"", ""#7f0000""))+"
"0","  theme_bw()+"
"0","  theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22), "
"0","        plot.title = element_text(size = 30), axis.title = element_text(size = 30), "
"0","        axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +"
"0","  guides (col= guide_legend(reverse= TRUE))"
"2","`summarise()` has grouped output by 'age_bins', 'exp_bins'. You can override using the `.groups` argument."
