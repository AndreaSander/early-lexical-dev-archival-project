load(here("anonymous_eye_data/mix1.Rda"))
mix1<- mix1 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix2
load(here("anonymous_eye_data/mix2.Rda"))
mix2<- mix2 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix3
load(here("anonymous_eye_data/mix3.Rda"))
mix3<- mix3 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix4
load(here("anonymous_eye_data/mix4.Rda"))
mix4<- mix4 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix5
load(here("anonymous_eye_data/mix5.Rda"))
mix5<- mix5 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix6
load(here("anonymous_eye_data/mix6.Rda"))
mix6<- mix6 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix7
load(here("anonymous_eye_data/mix7.Rda"))
mix7<- mix7 %>%
mutate(StudioTestName= as.character(StudioTestName))
eye_data_mix_studies <- mix1 %>%
bind_rows(mix2) %>%
bind_rows(mix3) %>%
bind_rows(mix4) %>%
bind_rows(mix5) %>%
bind_rows(mix6) %>%
bind_rows(mix7) %>%
filter(str_detect(RecordingName, "Mix_14")| str_detect(RecordingName, "Mix_20")) %>%
select(all_of(keepcols))
#Data check revealed several problems. Problems and solutions detailed below:
#Problem 1: the studio project name column contained information from project name and test name together
#and all the names were Mix 20, even if they were part of the Mix 14 project.
#Fix:
eye_data_mix_studies <- eye_data_mix_studies %>%
select(-StudioTestName) %>%
mutate(StudioTestName = case_when(StudioProjectName =="Mix-20-E1" ~ "E1",
StudioProjectName =="Mix-20-E1 (DO NOT USE)" ~ "E1",
StudioProjectName =="Mix-20-E2" ~ "E2",
StudioProjectName =="Mix-20-E2 (DO NOT USE)" ~ "E2",
StudioProjectName =="Mix-20-F1" ~ "F1",
StudioProjectName =="Mix-20-F1 (DO NOT USE)" ~ "F1",
StudioProjectName =="Mix-20-F2" ~ "F2",
StudioProjectName =="Mix-20-F2 (DO NOT USE)" ~ "F2"))%>%
select(-StudioProjectName) %>%
mutate(StudioProjectName = case_when(str_detect(RecordingName, "Mix_20")==TRUE ~ "Mix_20",
str_detect(RecordingName, "Mix_14")==TRUE ~ "Mix_14"))
#Note that some files were named Do Not Use. They contained subjects that were excluded from the original experiment
#for diverse reasons, however we included all the subjects in our data frame and then specified reasons for exclusions
#e.g. equipment failure in the demographic datasets. This way we kept the exclusion transparent and consistent across data sets.
#Problem 2: the way the auditory stimuli were named was inconsistent
#For example, sometimes the same audio "look at the spoon" was named "Spoon R(2).AVI" and others "Spoon R.AVI".
#sometimes the naming was not inconsistent but just uninformative e.g. "LF1(2).AVI"
#Fix:
eye_data_mix_studies <- eye_data_mix_studies %>%
mutate(MediaName = case_when(MediaName == "LF1(2).AVI" ~ "Chien L FR.AVI",
MediaName == "LF2(2).AVI" ~ "Bouche R SW.AVI",
MediaName == "LF3(2).AVI" ~ "Biscuit L FR.AVI",
MediaName == "LF4(2).AVI" ~ "Pomme R.AVI",
MediaName == "LF5(2).AVI" ~ "Cuillere L.AVI",
MediaName == "LF6(2).AVI" ~ "Pied L SW.AVI",
MediaName == "LF7(2).AVI" ~ "Livre R FR.AVI",
MediaName == "LF8(2).AVI" ~ "Main R.AVI",
MediaName == "LF9(2).AVI" ~ "Oreille L.AVI",
MediaName == "LF10(2).AVI" ~ "Porte L SW.AVI",
MediaName == "LF11(2).AVI" ~ "Biscuit R SW.AVI",
MediaName == "LF11.AVI" ~ "Biscuit R SW.AVI",
MediaName == "LF12(2).AVI" ~ "Bouche L FR.AVI",
MediaName == "LianeF(2).AVI" ~ "Main L.AVI",
MediaName == "LF14(2).AVI" ~ "Chien R SW.AVI",
MediaName == "LF15(2).AVI" ~ "Pied R FR.AVI",
MediaName == "LF16(2).AVI" ~ "Brosse a dent L.AVI",
MediaName == "LF17(2).AVI" ~ "Livre R FR.AVI",
MediaName == "LF18(2).AVI" ~ "Livre L SW.AVI",
MediaName == "Spoon R(2).AVI" ~ "Spoon R.AVI",
MediaName == "Foot L SW(2).AVI" ~ "Foot L SW.AVI",
MediaName == "Book R ENG(2).AVI" ~ "Book R ENG.AVI",
MediaName == "Hand R(8).AVI" ~ "Hand R.AVI",
MediaName == "Ear L(2).AVI" ~ "Ear L.AVI",
MediaName == "Cookie R SW(2).AVI" ~ "Cookie R SW.AVI",
MediaName == "Mouth L ENG(2).AVI" ~ "Mouth L ENG.AVI",
MediaName == "Bird L(3).AVI" ~ "Bird L.AVI",
MediaName == "Bird R(2).AVI" ~ "Bird R.AVI",
MediaName == "LE2.AVI" ~ "Bird R.AVI",
MediaName == "LE2(3).AVI" ~ "Bird R.AVI",
MediaName == "Dog R SW(3).AVI" ~ "Dog R SW.AVI",
MediaName == "Foot R ENG(2).AVI" ~ "Foot R ENG.AVI",
MediaName == "Toothbrush L(2).AVI" ~ "Toothbrush L.AVI",
MediaName == "Door R ENG(2).AVI" ~ "Door R ENG.AVI",
MediaName == "Book L SW(2).AVI" ~ "Book L SW.AVI",
MediaName == "Hand L(2).AVI" ~ "Hand L.AVI",
MediaName == "Mouth R SW(2).AVI" ~ "Mouth R SW.AVI",
MediaName == "Mouth, R, SW.AVI"  ~ "Mouth R SW.AVI",
TRUE ~ MediaName))
#Problem 3:
#Fix:
#wrong recording name for a twin. They had the same recording name but different study order, so they were two separate kids.
eye_data_mix_studies<- eye_data_mix_studies %>%
mutate(RecordingName = case_when(RecordingName == "Mix_20_S50" & StudioTestName == "E1" ~ "Mix_20_S49",
TRUE ~ RecordingName))
#Mix20 Data was missing and was non existent in Tobii for subjects: S9, s10, s11, s12, s15 and s46.
#Mix 14 data for subjects 6 and 3 missing from tobii
eye_data_mix_clean <- eye_data_mix_studies
#save?
load(here("anonymous_eye_data/eye_data_comp.Rda"))
eye_data_comp <- eye_data_comp %>%
select(all_of(keepcols))
eye_data_arch<- rbind(eye_data_comp,eye_data_mix_clean,eye_data_learn,eye_data_cogmisp)
eye_data_arch <- clean_names(eye_data_arch) %>%
mutate(studio_project_name = str_replace(studio_project_name, "_", "-")) #change Mix names to have hyphen instead of underscore so they merge correctly later
#Remove attention getters and blank media name rows
arch_comp_data <- eye_data_arch %>%
filter(str_detect(media_name, "attention")==FALSE &
str_detect(media_name, "Getter")==FALSE &
str_detect(media_name, "getter")==FALSE &
str_detect(media_name, "Attention") == FALSE) %>%
filter(!is.na(media_name)) %>%
group_by(recording_name) %>%
mutate(trial_number = rleid(media_name)) %>% #create trial number
full_join(Demo_arch) %>% #11 unmatched rows as identified with setdiff above (all identified as missing from Tobii)
ungroup()
#This reads in a previously created dataframe containing AOI information for each trial/order/study
AOI<- read_excel(here("AOI_maker.xlsx")) %>%
clean_names() %>%
mutate(trial_number = as.integer(parse_number(trial_number)))
arch_aoi_data <- left_join(arch_comp_data, AOI, by = c("studio_project_name", "trial_number", "media_name", "studio_test_name")) #All the rows were kept. No issues.
library(tidyverse)
library(readxl)
library(broom)
library(readr)
library(janitor)
library(here)
library(readr)
library(dplyr)
library(data.table)
library(tidylog)
library(stringr)
#This section reads in and cleans the variable names of the demographic data for all the studies.
#It only needs to be loaded once and then the merged demographics can be loaded as a single RDA file
load (here("anonymous_demographic_data/demo_learn.Rda"))
# N=30
load(here("anonymous_demographic_data/demo_cogmisp.Rda"))
# N= 76
load(here("anonymous_demographic_data/demo_mix14.Rda"))
# N=49
load(here("anonymous_demographic_data/demo_mix20.Rda"))
# N=67
load(here("anonymous_demographic_data/demo_comp.Rda"))
# N=30
# #All the demographic information gets combined into a single data frame
Demo_arch <- rbind(demo_learn,demo_cogmisp,demo_comp,demo_mix14,demo_mix20) #n=252
#save(Demo_arch, file = here("merged_data_Sets/Demo_arch.Rda"))
#In this section, raw eye-tracking data from 5 studies is loaded, cleaned, saved into RDA objects
#It only needs to be loaded once and then the merged demographics can be loaded as a single RDA file
#Specify which columns to keep from many columns exported from TOBII
keepcols <- c("RecordingName","MediaName", "RecordingDate", "LocalTimeStamp",
"RecordingTimestamp","ValidityLeft","ValidityRight","GazePointX (ADCSpx)",
"GazePointY (ADCSpx)", "StudioProjectName", "StudioTestName")
load(here("anonymous_eye_data/eye_data_learn.Rda"))
eye_data_learn <- eye_data_learn %>%
select(all_of(keepcols))
#Mix 1
load(here("anonymous_eye_data/mix1.Rda"))
mix1<- mix1 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix2
load(here("anonymous_eye_data/mix2.Rda"))
mix2<- mix2 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix3
load(here("anonymous_eye_data/mix3.Rda"))
mix3<- mix3 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix4
load(here("anonymous_eye_data/mix4.Rda"))
mix4<- mix4 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix5
load(here("anonymous_eye_data/mix5.Rda"))
mix5<- mix5 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix6
load(here("anonymous_eye_data/mix6.Rda"))
mix6<- mix6 %>%
mutate(StudioTestName= as.character(StudioTestName))
#Mix7
load(here("anonymous_eye_data/mix7.Rda"))
mix7<- mix7 %>%
mutate(StudioTestName= as.character(StudioTestName))
eye_data_mix_studies <- mix1 %>%
bind_rows(mix2) %>%
bind_rows(mix3) %>%
bind_rows(mix4) %>%
bind_rows(mix5) %>%
bind_rows(mix6) %>%
bind_rows(mix7) %>%
filter(str_detect(RecordingName, "Mix_14")| str_detect(RecordingName, "Mix_20")) %>%
select(all_of(keepcols))
#Data check revealed several problems. Problems and solutions detailed below:
#Problem 1: the studio project name column contained information from project name and test name together
#and all the names were Mix 20, even if they were part of the Mix 14 project.
#Fix:
eye_data_mix_studies <- eye_data_mix_studies %>%
select(-StudioTestName) %>%
mutate(StudioTestName = case_when(StudioProjectName =="Mix-20-E1" ~ "E1",
StudioProjectName =="Mix-20-E1 (DO NOT USE)" ~ "E1",
StudioProjectName =="Mix-20-E2" ~ "E2",
StudioProjectName =="Mix-20-E2 (DO NOT USE)" ~ "E2",
StudioProjectName =="Mix-20-F1" ~ "F1",
StudioProjectName =="Mix-20-F1 (DO NOT USE)" ~ "F1",
StudioProjectName =="Mix-20-F2" ~ "F2",
StudioProjectName =="Mix-20-F2 (DO NOT USE)" ~ "F2"))%>%
select(-StudioProjectName) %>%
mutate(StudioProjectName = case_when(str_detect(RecordingName, "Mix_20")==TRUE ~ "Mix_20",
str_detect(RecordingName, "Mix_14")==TRUE ~ "Mix_14"))
#Note that some files were named Do Not Use. They contained subjects that were excluded from the original experiment
#for diverse reasons, however we included all the subjects in our data frame and then specified reasons for exclusions
#e.g. equipment failure in the demographic datasets. This way we kept the exclusion transparent and consistent across data sets.
#Problem 2: the way the auditory stimuli were named was inconsistent
#For example, sometimes the same audio "look at the spoon" was named "Spoon R(2).AVI" and others "Spoon R.AVI".
#sometimes the naming was not inconsistent but just uninformative e.g. "LF1(2).AVI"
#Fix:
eye_data_mix_studies <- eye_data_mix_studies %>%
mutate(MediaName = case_when(MediaName == "LF1(2).AVI" ~ "Chien L FR.AVI",
MediaName == "LF2(2).AVI" ~ "Bouche R SW.AVI",
MediaName == "LF3(2).AVI" ~ "Biscuit L FR.AVI",
MediaName == "LF4(2).AVI" ~ "Pomme R.AVI",
MediaName == "LF5(2).AVI" ~ "Cuillere L.AVI",
MediaName == "LF6(2).AVI" ~ "Pied L SW.AVI",
MediaName == "LF7(2).AVI" ~ "Livre R FR.AVI",
MediaName == "LF8(2).AVI" ~ "Main R.AVI",
MediaName == "LF9(2).AVI" ~ "Oreille L.AVI",
MediaName == "LF10(2).AVI" ~ "Porte L SW.AVI",
MediaName == "LF11(2).AVI" ~ "Biscuit R SW.AVI",
MediaName == "LF11.AVI" ~ "Biscuit R SW.AVI",
MediaName == "LF12(2).AVI" ~ "Bouche L FR.AVI",
MediaName == "LianeF(2).AVI" ~ "Main L.AVI",
MediaName == "LF14(2).AVI" ~ "Chien R SW.AVI",
MediaName == "LF15(2).AVI" ~ "Pied R FR.AVI",
MediaName == "LF16(2).AVI" ~ "Brosse a dent L.AVI",
MediaName == "LF17(2).AVI" ~ "Livre R FR.AVI",
MediaName == "LF18(2).AVI" ~ "Livre L SW.AVI",
MediaName == "Spoon R(2).AVI" ~ "Spoon R.AVI",
MediaName == "Foot L SW(2).AVI" ~ "Foot L SW.AVI",
MediaName == "Book R ENG(2).AVI" ~ "Book R ENG.AVI",
MediaName == "Hand R(8).AVI" ~ "Hand R.AVI",
MediaName == "Ear L(2).AVI" ~ "Ear L.AVI",
MediaName == "Cookie R SW(2).AVI" ~ "Cookie R SW.AVI",
MediaName == "Mouth L ENG(2).AVI" ~ "Mouth L ENG.AVI",
MediaName == "Bird L(3).AVI" ~ "Bird L.AVI",
MediaName == "Bird R(2).AVI" ~ "Bird R.AVI",
MediaName == "LE2.AVI" ~ "Bird R.AVI",
MediaName == "LE2(3).AVI" ~ "Bird R.AVI",
MediaName == "Dog R SW(3).AVI" ~ "Dog R SW.AVI",
MediaName == "Foot R ENG(2).AVI" ~ "Foot R ENG.AVI",
MediaName == "Toothbrush L(2).AVI" ~ "Toothbrush L.AVI",
MediaName == "Door R ENG(2).AVI" ~ "Door R ENG.AVI",
MediaName == "Book L SW(2).AVI" ~ "Book L SW.AVI",
MediaName == "Hand L(2).AVI" ~ "Hand L.AVI",
MediaName == "Mouth R SW(2).AVI" ~ "Mouth R SW.AVI",
MediaName == "Mouth, R, SW.AVI"  ~ "Mouth R SW.AVI",
TRUE ~ MediaName))
#Problem 3:
#Fix:
#wrong recording name for a twin. They had the same recording name but different study order, so they were two separate kids.
eye_data_mix_studies<- eye_data_mix_studies %>%
mutate(RecordingName = case_when(RecordingName == "Mix_20_S50" & StudioTestName == "E1" ~ "Mix_20_S49",
TRUE ~ RecordingName))
#Mix20 Data was missing and was non existent in Tobii for subjects: S9, s10, s11, s12, s15 and s46.
#Mix 14 data for subjects 6 and 3 missing from tobii
eye_data_mix_clean <- eye_data_mix_studies
#save?
load(here("anonymous_eye_data/eye_data_comp.Rda"))
eye_data_comp <- eye_data_comp %>%
select(all_of(keepcols))
eye_data_arch<- rbind(eye_data_comp,eye_data_mix_clean,eye_data_learn,eye_data_cogmisp)
load(here("anonymous_eye_data/eye_data_cogmisp.Rda"))
eye_data_cogmisp <- eye_data_cogmisp %>%
select(all_of(keepcols))
eye_data_arch<- rbind(eye_data_comp,eye_data_mix_clean,eye_data_learn,eye_data_cogmisp)
eye_data_arch <- clean_names(eye_data_arch) %>%
mutate(studio_project_name = str_replace(studio_project_name, "_", "-")) #change Mix names to have hyphen instead of underscore so they merge correctly later
#Check potential issues with the merge
setdiff(Demo_arch$recording_name, eye_data_arch$recording_name) # all the rows that are different correspond to data that has already been identified as missing from tobii
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
remotes::install_github("dmirman/gazer") #needed to install gazer
library(gazer)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(sjPlot)
library(ggExtra)
library(gazer)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
#using plot_model from sjplot in brackets added the values in which to predict effects so that the function does not extrapolate.
x<- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.70, 0.39]"), line.size = 0.8, colors = c("#feb24c", "#d7301f", "#7f0000"),
legend.title = "Exposure bins (percentage range)", title = "Predicted values of looking accuracy for the additive model")
#changing the legend levels to ra-name the groups in a more appropriate way
x$data$group_col<- as.character(x$data$group_col)
x$data$group_col<- factor(x$data$group_col)
levels(x$data$group_col)<- c("10-39", "40-70", "71-100")
x + theme_bw() +
xlab("Age (months)")+
ylab("Proportion looking to target")+
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22), plot.title = element_text(size = 30), axis.title = element_text(size = 30), axis.text = element_text(size = 30))
ggsave("predicted_values.png", dpi = "print", width = 16, height = 8, units = "in")
m<- arch_re_zero #but without age centered
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age (months)") +
ylab("Experience with target language (%)")+
ggtitle("Distribution of participants by experience and age")+
theme_bw()
print(pm)
ggsave("scatter_plot.jpg")
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = 12, fill= "#fc8d59"),
yparams = list(binwidth = 30, fill= "#91cf60"))
print(marginal)
#ggsave("marginal_plot.jpg")
knitr::opts_chunk$set(echo = TRUE)
library(see)
library(patchwork)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(devtools)
#remotes::install_github("dmirman/gazer") #needed to install gazer
library(gazer)
library(mgcv)
library(gamm4)
load(here("merged_data_sets/arch_final.Rda"))
View(arch_final)
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
knitr::opts_chunk$set(echo = TRUE)
library(see)
library(patchwork)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(devtools)
#remotes::install_github("dmirman/gazer") #needed to install gazer
library(gazer)
library(mgcv)
#library(gamm4)
library(broom)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(ggExtra)
library(sjPlot)
library(DHARMa)
library(performance)
library(broom.mixed)
library(rempsyc)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm <- arch_re_zero_c
for_lmm <- for_lmm %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_centered,exp_centered)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
#summary(lmm_accumulator)
#4) Additive Model
lmm_aditive <- lmer (prop_looking ~ exp_centered + age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_aditive) #<- SELECTED MODEL
View(arch_re_zero)
View(for_lmm)
lmm_test<- lmer(prop_looking ~ samples_target + (1|subject_id), data=for_lmm)
summary(lmm_test)
lmm_test2<- lmer(prop_looking ~ samples_total + (1|subject_id), data=for_lmm)
summary(lmm_test2)
View(arch_re_zero_c)
