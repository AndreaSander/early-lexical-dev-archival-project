guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
## Extra plots
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title=)
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
## Extra plots
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
## Extra plots
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 7, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
## Extra plots
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 6, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
## Extra plots
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
View(arch_re_zero)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(sjPlot)
library(ggExtra)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
View(for_lmm_viz)
real <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins, prop_looking)%>%
ggplot(aes(x=age_months, y=prop_looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
real <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
group_by(age_months,exp_bins, prop_looking)%>%
ggplot(aes(x=age_months, y=prop_looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
## 1) Making real data be mean looking to target
library(magick)
#real data with proportion looking to make it comparable
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
real <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
group_by(age_months,exp_bins, prop_looking)%>%
ggplot(aes(x=age_months, y=prop_looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
plot_3<- image_read("predicted_values_layer2.png")
plot_4<- image_read("real_values_layer2.png")
both <- image_scale(c(plot_1, plot_2), "1200")
both <- image_scale(c(plot_3, plot_4), "1200")
both2 <- image_scale(c(plot_3, plot_4), "1200")
image_average(both)
tc2 <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))%>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=28.9~"21-28 (m)",
age_months >=29 & age_months<=36.9~"29-36 (m)",
age_months>=37 & age_months<=48.9~"37-48 (m)"))
tc2%>%
group_by(age_bins,exp_bins, prop_looking, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
ggplot(aes(x=interval, y=prop_looking, color=exp_bins))+
geom_line(size=1)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
View(arch_re_zero)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(sjPlot)
library(ggExtra)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
## Time course fix? not average but prop looking
tc2 <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))%>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=28.9~"21-28 (m)",
age_months >=29 & age_months<=36.9~"29-36 (m)",
age_months>=37 & age_months<=48.9~"37-48 (m)"))
tc2%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)%>%
ggplot(aes(x=interval, y=prop_looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
tc <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))%>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=28.9~"21-28 (m)",
age_months >=29 & age_months<=36.9~"29-36 (m)",
age_months>=37 & age_months<=48.9~"37-48 (m)"))
tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
ggsave("time_course.png", dpi = "print", width = 16, height = 8, units = "in")
reversed <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=age_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~exp_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="time from noun onset (ms)",
y= "proportion looking to target")+
ggtitle("time series of infant looking by age group divided by experience")+
scale_color_manual(values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme(legend.text = element_text(size = 15), legend.title = element_text(size = 15), plot.title = element_text(size = 20), axis.title = element_text(size = 18), axis.text = element_text(size = 15))
theme_bw()+
guides (col= guide_legend(reverse= TRUE))
tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
