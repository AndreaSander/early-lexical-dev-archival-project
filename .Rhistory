group_by(recording_name) %>%
mutate(trial_number = rleid(media_name)) %>% #create trial number
full_join(Demo_arch) %>%
ungroup()
#Adding an Area of Interest column to the newly merged data frame
#This reads in a previously created dataframe containing AOI information for each trial/order/study
AOI<- read_excel(here("AOI_maker.xlsx")) %>%
clean_names() %>%
mutate(trial_number = as.integer(parse_number(trial_number)))
#Check potential issues with the merging
setdiff(AOI$media_name, arch_comp_data$media_name) #0 no differences
setdiff(arch_comp_data$media_name, AOI$media_name)# The differences are 1) attention getters, 2) test trials from the "learn" experiment, for which we are only interested in the learning phase
arch_aoi_data <- left_join(arch_comp_data, AOI, by = c("studio_project_name", "trial_number", "media_name", "studio_test_name"))
#calculate amount of trials pre-exclusions
trial_n <- arch_aoi_data %>%
distinct(recording_name, trial_number,.keep_all = F)
#4860 trials before exclusions
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4477
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants 383 trials
filter (exclusion_low_birth_weight=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4371
489-383
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants 383 trials
filter (exclusion_low_birth_weight=="F")%>% #we lost 5 participants and 106 trials #489
filter (exclusion_health=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4336
524-489
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants 383 trials
filter (exclusion_low_birth_weight=="F")%>% #we lost 5 participants and 106 trials
filter (exclusion_health=="F")%>% # we lost 2 participants and 35 trials
filter (exclusion_dev_delay=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4272
588-524
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants and 383 trials
filter (exclusion_low_birth_weight=="F")%>% #we lost 5 participants and 106 trials
filter (exclusion_health=="F")%>% # we lost 2 participants and 35 trials
filter (exclusion_dev_delay=="F")%>% # we lost 3 participants and 64 trials
filter (exclusion_technical_error=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4158
702-588
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants and 383 trials
filter (exclusion_low_birth_weight=="F")%>% #we lost 5 participants and 106 trials
filter (exclusion_health=="F")%>% # we lost 2 participants and 35 trials
filter (exclusion_dev_delay=="F")%>% # we lost 3 participants and 64 trials
filter (exclusion_technical_error=="F")%>% #we lost 9 participants and 114 trials #702
filter (exclusion_testing_error=="F")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-4121
739-702
arch_final<- arch_aoi_data %>%
filter(exclusion_premature=="F")%>% # we lost 16 participants and 383 trials
filter (exclusion_low_birth_weight=="F")%>% #we lost 5 participants and 106 trials
filter (exclusion_health=="F")%>% # we lost 2 participants and 35 trials
filter (exclusion_dev_delay=="F")%>% # we lost 3 participants and 64 trials
filter (exclusion_technical_error=="F")%>% #we lost 9 participants and 114 trials #702
filter (exclusion_testing_error=="F")%>% # we lost participants and 37 trials
filter(other_lang_exp <= 10)
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-3861
999-739
arch_final <- arch_final %>%
mutate (half_age = age_months/2) %>%
mutate(seq_fr_exclude = case_when(
acq_age_fr < half_age ~ "false",
acq_age_fr >= half_age~ "true"
))%>%
mutate(seq_eng_exclude= case_when(
acq_age_eng < half_age ~ "false",
acq_age_eng >= half_age~ "true"
)) %>%
filter(seq_fr_exclude=="false")%>%
filter(seq_eng_exclude=="false")
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-3521
1339-999
arch_final<- arch_final %>%
filter(trial_type %in% c("normal", "filler", "same"))
#counting the total number of trials included in the final data set.
trials<-arch_final %>%
distinct(media_name, recording_name, .keep_all = F) #1990 TOTAL TRIALS
4860-1990
2870-1339
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(mgcv)
library(gamm4)
library(broom)
library(rempsyc)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
library(wordbankr)
library(janitor)
#Retrieve items from media names
items <- arch_re_zero %>%
filter(studio_project_name !="CogMisp-24")%>%
filter(studio_project_name !="LearnMix-36")%>%
distinct(media_name, studio_project_name, age_months, trial_lang) %>%
mutate(media_name = case_when(str_detect(media_name, "Dog|Chien")~"dog",
str_detect(media_name, "Cookie|Biscuit")~ "cookie",
str_detect(media_name, "Apple|Pomme")~"apple",
str_detect(media_name, "Spoon|Cuillere")~"spoon",
str_detect(media_name, "Book|Livre")~"book",
str_detect(media_name, "Hand|Main")~"hand",
str_detect(media_name, "Ear|Oreille")~"ear",
str_detect(media_name, "Mouth|Bouche")~"mouth",
str_detect(media_name, "Foot|Pied")~"foot",
str_detect(media_name, "Toothbrush|Brosse")~"toothbrush",
str_detect(media_name, "Door|Porte")~"door",
str_detect(media_name, "Bird")~"bird",
TRUE~media_name)) %>%
separate(media_name, into = c("item", "2", "3"), sep="_", remove=F) %>%
select (-c("2", "3"))
items_learnmix <- arch_re_zero %>%
filter(studio_project_name== "LearnMix-36") %>%
distinct(media_name, studio_project_name, age_months, trial_lang) %>%
mutate(media_name = str_remove(media_name, "FR")) %>%
mutate(media_name = str_remove(media_name, "Single")) %>%
mutate(media_name = str_remove(media_name, "EN")) %>%
separate(media_name, into = c("1", "2", "item"), sep="_", remove=F) %>%
select (-c("1", "2")) %>%
mutate(item = case_when(str_detect(item, "Chien|Dog")~"dog",
str_detect(item, "Lapin|Bunny")~ "bunny",
str_detect(item, "Poisson|Fish")~"fish"))
items_cogmisp <- arch_re_zero %>%
filter(studio_project_name== "CogMisp-24") %>%
distinct(media_name, studio_project_name, age_months, trial_lang) %>%
separate(media_name, into = c("1", "2", "item", "4"), sep="_", remove=F)%>%
select (-c("1", "2", "4")) %>%
mutate(item = case_when(str_detect(item, "banC")~"banana",
str_detect(item, "bowC")~ "bowl",
str_detect(item, "mouC")~"mouth",
str_detect(item, "girC")~"giraffe",
str_detect(item, "cooC")~"cookie",
str_detect(item, "pizC")~"pizza",
str_detect(item, "winC")~"window",
str_detect(item, "butC")~"butterfly",
str_detect(item, "choC")~"chocolate",
str_detect(item, "tabC")~"table",
str_detect(item, "fooC")~"foot",
str_detect(item, "monC")~"monkey"))
#Create combined list of items from all studies
arch_items <- rbind(items,items_learnmix,items_cogmisp) %>%
select (-media_name) %>%
mutate(item = tolower(item))
arch_items$item[arch_items$item== "froggy"] <- "frog"
english_items<- get_item_data("English (American)", "WS") %>%
filter(str_detect(uni_lemma, "ear|apple|fish|dog|spoon|hand|sheep|toothbrush|frog|door|pencil|bunny|coat|monkey|duck|cow|cookie|book|mouth|bird|foot|bunny|banana|bowl|giraffe|pizza|window|butterfly|chocolate|table")) %>%
filter(!str_detect(uni_lemma, "bear|applesauce|tear|hear|cowboy|food"))
item_id_eng <- english_items$item_id
admin_by_item_eng<- get_instrument_data(
language = "English (American)",
form = "WS",
items = item_id_eng,
administration_info = T,
item_info = T)
eng_items_aoa<- fit_aoa(admin_by_item_eng)
eng_items_aoa <- eng_items_aoa %>%
mutate(item = item_definition)
eng_items_aoa$item[eng_items_aoa$item=="fish(animal"]<- "fish"
arch_eng_items_aoa <- left_join(eng_items_aoa, arch_items, by="item") %>%
filter(trial_lang =="english")
View(arch_eng_items_aoa)
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa, colour=as.character(item)))+
geom_point()
View(eng_items_aoa)
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa, colour=as.character(item)))+
geom_point() +
geom_smooth()
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa)+
geom_point(aes(color = as.factor(item))) +
geom_smooth()
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa))+
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa))+
geom_point(aes(color = as.factor(item)))
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa))+
geom_point(aes(color = as.factor(item))) +
geom_smooth()
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa))+
#geom_point(aes(color = as.factor(item))) +
geom_point(aes(color = study)) +
geom_smooth()
View(arch_eng_items_aoa)
ggplot(arch_eng_items_aoa, aes(x=age_months, y=aoa))+
#geom_point(aes(color = as.factor(item))) +
geom_point(aes(color = studio_project_name)) +
geom_smooth(aes(color = studio_project_name))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(sjPlot)
library(ggExtra)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(sjPlot)
library(ggExtra)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
#real data with proportion looking to make it comparable
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
real <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
group_by(age_months,exp_bins, prop_looking)%>%
ggplot(aes(x=age_months, y=prop_looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
plot_3<- image_read("predicted_values_layer2.png")
## 1) Making real data be mean looking to target
library(magick)
#real data with proportion looking to make it comparable
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
real <- for_lmm_viz %>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
group_by(age_months,exp_bins, prop_looking)%>%
ggplot(aes(x=age_months, y=prop_looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer2.png", dpi = "print", width = 16, height = 8, units = "in")
plot_3<- image_read("predicted_values_layer2.png")
plot_4<- image_read("real_values_layer2.png")
both2 <- image_scale(c(plot_3, plot_4), "1200")
image_average(both2)
## Extra plots
## 1) Making real data be mean looking to target
library(magick)
x.2 <- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.75, 0.5, 0.25]"), line.size = 0.8, colors = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"), title="")
x.2 + theme_bw() +
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.position="none", axis.text = element_text(size = 30))
ggsave("predicted_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
real <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.25 ~".25",
exp_target_lang_prop >= .26 & exp_target_lang_prop <=.5 ~".5",
exp_target_lang_prop >=.51 & exp_target_lang_prop <=.75 ~".75",
exp_target_lang_prop >=.76 & exp_target_lang_prop <=1 ~"1"))
real%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_months,exp_bins)%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=age_months, y=looking, color=exp_bins))+
geom_point()+
scale_y_continuous(limits = c(0,1))+
labs(x="",
y= "")+
scale_color_manual(name= "Exposure bins (proportion)", values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme_bw()+
ylim(0.4, 1.0)+
xlim(14, 48)+
theme(legend.position = "none",
axis.text = element_text(size = 30), strip.text.x = element_text(size = 30))
ggsave("real_values_layer.png", dpi = "print", width = 16, height = 8, units = "in")
plot_1<- image_read("predicted_values_layer.png")
plot_2<- image_read("real_values_layer.png")
both <- image_scale(c(plot_1, plot_2), "1200")
image_average(both)
m<- arch_re_zero #but without age centered
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age(months)") +
ylab("Experience with target language (%)")+
theme_bw()
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = 8.5, fill= "#fc8d59"),
yparams = list(binwidth = 25, fill= "#91cf60"))
print(marginal)
ggsave("marginal_plot.jpg")
knitr::opts_chunk$set(echo = TRUE)
for_lmm <- arch_re_zero_c
for_lmm <- for_lmm %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_centered,exp_centered)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
#1) Maturation only
lmm_age_only <- lmer (prop_looking ~ age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_age_only)
#2) Experience only
lmm_experience_only <- lmer (prop_looking ~ exp_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_experience_only)
#3)Accumulator model
lmm_accumulator <- lmer (prop_looking ~ exp_centered * age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_accumulator)
#4) Additive Model
lmm_aditive <- lmer (prop_looking ~ exp_centered + age_centered + (1|subject_id) + (1|media_name), data = for_lmm)
summary(lmm_aditive) #<- SELECTED MODEL
check_model(lmm_aditive, panel=F)
library(see)
library(patchwork)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(mgcv)
library(gamm4)
library(broom)
library(ggiraph)
library(ggiraphExtra)
library(ggeffects)
library(ggExtra)
library(sjPlot)
library(DHARMa)
library(performance)
library(broom.mixed)
library(rempsyc)
check_model(lmm_aditive, panel=F)
## testing our models but adding testing language as a fixed effect
for_lmm_L <- arch_re_zero_c
for_lmm_L <- for_lmm_L %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_centered,exp_centered, trial_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
#1) Maturation only
lmm_age_only_L <- lmer (prop_looking ~ age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_age_only_L)
#2) Experience only
lmm_experience_only_L <- lmer (prop_looking ~ exp_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_experience_only_L)
#3)Accumulator model
lmm_accumulator_L <- lmer (prop_looking ~ exp_centered * age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_accumulator_L)
#4) Additive Model
lmm_aditive_L <- lmer (prop_looking ~ exp_centered + age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_aditive_L) #<- SELECTED MODEL
