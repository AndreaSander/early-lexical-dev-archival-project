filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
tc <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.39 ~"10-39",
exp_target_lang_prop >= .40 & exp_target_lang_prop <=.70 ~"40-70",
exp_target_lang_prop >=.71 & exp_target_lang_prop <=1 ~"71-100")) %>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=30.9~"21-30 (m)",
age_months>=31 & age_months<=48.9~"31-48 (m)"))
tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (percentage range)", values = c("#feb24c", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
ggsave("time_course.png", dpi = "print", width = 16, height = 8, units = "in")
reversed <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=age_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~exp_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="time from noun onset (ms)",
y= "proportion looking to target")+
ggtitle("time series of infant looking by age group divided by experience")+
scale_color_manual(values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme(legend.text = element_text(size = 15), legend.title = element_text(size = 15), plot.title = element_text(size = 20), axis.title = element_text(size = 18), axis.text = element_text(size = 15))
theme_bw()+
guides (col= guide_legend(reverse= TRUE))
View(tc)
tc <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))
View(tc)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
tc <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.39 ~"10-39",
exp_target_lang_prop >= .40 & exp_target_lang_prop <=.70 ~"40-70",
exp_target_lang_prop >=.71 & exp_target_lang_prop <=1 ~"71-100")) %>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=30.9~"21-30 (m)",
age_months>=31 & age_months<=48.9~"31-48 (m)"))
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))
tc%>%
ggplot(aes(x=interval, y=looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (percentage range)", values = c("#feb24c", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
View(tc_graph)
check <-
tc_graph %>%
filter(looking <0.30)
View(check)
View(check)
print(tc$target)
unique(tc$target)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
tc <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.39 ~"10-39",
exp_target_lang_prop >= .40 & exp_target_lang_prop <=.70 ~"40-70",
exp_target_lang_prop >=.71 & exp_target_lang_prop <=1 ~"71-100")) %>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=30.9~"21-30 (m)",
age_months>=31 & age_months<=48.9~"31-48 (m)"))
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
mutate(looking=samples_target/samples_total, na.rm=T)
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
mutate(looking=samples_target/samples_total)
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(looking=samples_target/samples_total)
range(tc_graph$looking)
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))
range(tc_graph$looking)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
tc <- arch_re_zero%>%
mutate(exp_bins = case_when(exp_target_lang_prop >= 0.1 & exp_target_lang_prop <=.39 ~"10-39",
exp_target_lang_prop >= .40 & exp_target_lang_prop <=.70 ~"40-70",
exp_target_lang_prop >=.71 & exp_target_lang_prop <=1 ~"71-100")) %>%
mutate(age_bins= case_when(age_months >=14 & age_months<=20.9~"14-20 (m)",
age_months >=21 & age_months<=30.9~"21-30 (m)",
age_months>=31 & age_months<=48.9~"31-48 (m)"))
tc_graph <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))
tc_graph %>%
ggplot(aes(x=interval, y=looking, color=exp_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~age_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="Time from noun onset (ms)",
y= "Proportion looking to target")+
ggtitle("Time series of infant looking by age group divided by experience")+
scale_color_manual(name= "Exposure bins (percentage range)", values = c("#feb24c", "#d7301f", "#7f0000"))+
theme_bw()+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22),
plot.title = element_text(size = 30), axis.title = element_text(size = 30),
axis.text = element_text(size = 22), strip.text.x = element_text(size = 22)) +
guides (col= guide_legend(reverse= TRUE))
ggsave("time_course.png", dpi = "print", width = 16, height = 8, units = "in")
reversed <- tc%>%
filter(noun_onset>=360 & noun_onset<=3000)%>%
group_by(age_bins,exp_bins, interval = ifelse(ceiling(noun_onset/100) == 0, 100, ceiling(noun_onset/100)*100))%>%
summarise(looking=mean(target, na.rm=T))%>%
ggplot(aes(x=interval, y=looking, color=age_bins))+
geom_line(size=1)+
#    stat_summary(aes(y = looking), fun.y=mean, colour="black", geom="line", size=0.8, alpha=0.5)+
facet_grid(~exp_bins)+
scale_y_continuous(limits = c(0,1))+
labs(x="time from noun onset (ms)",
y= "proportion looking to target")+
ggtitle("time series of infant looking by age group divided by experience")+
scale_color_manual(values = c("#feb24c", "#ef6548", "#d7301f", "#7f0000"))+
theme(legend.text = element_text(size = 15), legend.title = element_text(size = 15), plot.title = element_text(size = 20), axis.title = element_text(size = 18), axis.text = element_text(size = 15))
theme_bw()+
guides (col= guide_legend(reverse= TRUE))
count_exp<- tc %>%
distinct(recording_name, exp_bins) %>%
group_by(exp_bins) %>%
tally()
count_exp_age<- tc %>%
distinct(recording_name, exp_bins, age_bins) %>%
group_by(exp_bins, age_bins) %>%
tally()
View(count_exp_age)
13+35+6
28+22+28
19+15+10
554+78+44
54+78+44
13+28+19
35+22+15
10+28+6
60+72+44
#using plot_model from sjplot in brackets added the values in which to predict effects so that the function does not extrapolate.
x<- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.70, 0.39]"), line.size = 0.8, colors = c("#feb24c", "#d7301f", "#7f0000"),
legend.title = "Exposure bins (percentage range)", title = "Predicted values of looking accuracy for the additive model")
for_lmm_viz <- arch_re_zero_c
for_lmm_viz <- for_lmm_viz %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_months,exp_target_lang_prop)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
lmm_viz_aditive <- lmer (prop_looking ~ exp_target_lang_prop + age_months + (1|subject_id) + (1|media_name), data = for_lmm_viz)
#using plot_model from sjplot in brackets added the values in which to predict effects so that the function does not extrapolate.
x<- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.70, 0.39]"), line.size = 0.8, colors = c("#feb24c", "#d7301f", "#7f0000"),
legend.title = "Exposure bins (percentage range)", title = "Predicted values of looking accuracy for the additive model")
#changing the legend levels to ra-name the groups in a more appropriate way
x$data$group_col<- as.character(x$data$group_col)
x$data$group_col<- factor(x$data$group_col)
levels(x$data$group_col)<- c("10-39", "40-70", "71-100")
x + theme_bw() +
xlab("Age (months)")+
ylab("Proportion looking to target")+
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22), plot.title = element_text(size = 30), axis.title = element_text(size = 30), axis.text = element_text(size = 30))
ggsave("predicted_values.png", dpi = "print", width = 16, height = 8, units = "in")
x<- plot_model(lmm_viz_aditive, type="eff", terms = c("age_months[14,20, 26, 32, 38, 44, 48] ", "exp_target_lang_prop[1 , 0.70, 0.39]"), line.size = 0.8, colors = c("#feb24c", "#d7301f", "#7f0000"),
legend.title = "Exposure to target language (proportion)", title = "Predicted values of looking accuracy for the additive model", show.data = T)
x + theme_bw() +
xlab("Age (months)")+
ylab("Proportion looking to target")+
ylim(0.4, 1.0)+
xlim(14, 48)+
geom_hline(yintercept = 0.5 , linetype = "dashed")+
annotate("text", y=0.53, x=30, label="Chance looking to target", size=8)+
guides (col= guide_legend(reverse= TRUE))+
theme(legend.text = element_text(size = 22), legend.title = element_text(size = 22), plot.title = element_text(size = 30), axis.title = element_text(size = 30), axis.text = element_text(size = 30))
m<- arch_re_zero #but without age centered
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age(months)") +
ylab("Experience with target language (%)")+
theme_bw()
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = 8.5, fill= "#fc8d59"),
yparams = list(binwidth = 30, fill= "#91cf60"))
print(marginal)
#ggsave("marginal_plot.jpg")
m<- arch_re_zero #but without age centered
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age(months)") +
ylab("Experience with target language (%)")+
theme_bw()
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = 12, fill= "#fc8d59"),
yparams = list(binwidth = 30, fill= "#91cf60"))
print(marginal)
#ggsave("marginal_plot.jpg")
7+10+48
7+10+18
48-14
m<- arch_re_zero #but without age centered
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age(months)") +
ylab("Experience with target language (%)")+
theme_bw()
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = 12, fill= "#fc8d59"),
yparams = list(binwidth = c(7, 9, 18), fill= "#91cf60"))
print(marginal)
ggsave("marginal_plot.jpg")
34/3
pm<- m %>%
ggplot(aes(x=age_months, y=exp_to_target_lang)) +
geom_point() +
theme(legend.position="none")+
xlab("Age(months)") +
ylab("Experience with target language (%)")+
theme_bw()
marginal<- ggMarginal(pm, type="histogram", aes(y=after_stat(count)),
xparams = list(binwidth = c(7,9,18), fill= "#fc8d59"),
yparams = list(binwidth = 30, fill= "#91cf60"))
print(marginal)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(dplyr)
library(lme4)
library(lmerTest)
library(afex)
library(gazer)
library(mgcv)
library(gamm4)
library(broom)
library(rempsyc)
load(here("merged_data_sets/arch_final.Rda"))
arch_re_zero<- arch_final%>%
group_by(studio_project_name, studio_test_name, trial_number, recording_name)%>%
mutate(trial_from_zero = recording_timestamp-min(recording_timestamp))%>%
group_by(studio_project_name)%>%
mutate(noun_onset = case_when(studio_project_name=="CompMix-36"~trial_from_zero-3000,
studio_project_name=="LearnMix-36"~trial_from_zero-4500,
studio_project_name=="Mix-20"~trial_from_zero-5400,
studio_project_name=="Mix-14"~trial_from_zero-5400,
studio_project_name=="CogMisp-24"~trial_from_zero-1500))%>%
ungroup()%>%
rename(target_side=target, distractor_side=distractor,
gaze_point_x= gaze_point_x_adc_spx,
gaze_point_y = gaze_point_y_adc_spx)%>%
filter(gaze_point_x>=0 & gaze_point_x<= 1920)%>% #keeps only observations that are in the screen
filter(gaze_point_y>=0 & gaze_point_y<=1200)%>%
filter(!is.na(gaze_point_x))%>% #gets rid of the observations where tobii didn't get any reading
filter(!is.na(gaze_point_y))%>%
filter(!is.na(validity_left)) %>%
filter(!is.na(validity_right)) %>%
filter(validity_left<= 1)%>%
filter(validity_right <= 1)%>%
mutate(target = case_when(gaze_point_x >= target_x_min&gaze_point_x <= target_x_max&gaze_point_y >= target_y_min&gaze_point_y <= target_y_max~TRUE,
TRUE~FALSE))
arch_re_zero <- arch_re_zero%>%
ungroup()%>%
group_by(studio_test_name, eng_exp, fre_exp)%>%
mutate(trial_lang = case_when(str_detect(studio_test_name,"E")~ "english",
str_detect(studio_test_name, "F")~ "french"))
#centering to an easy to interpret value that is close to the mean, 25 months for age and 50% for experience.
arch_re_zero<- arch_re_zero%>%
mutate(exp_to_target_lang = case_when(trial_lang == "english" ~ eng_exp,
trial_lang == "french" ~ fre_exp)) %>%
mutate(exp_target_lang_prop = exp_to_target_lang/100)
#mean(arch_re_zero$age_months)#25.79
#mean(arch_re_zero$exp_target_lang_prop) #0.57
arch_re_zero_c<- arch_re_zero %>%
mutate(age_centered = age_months-25) %>%
mutate(exp_centered =exp_target_lang_prop - .50)
## testing our models but adding testing language as a fixed effect
for_lmm_L <- arch_re_zero_c
for_lmm_L <- for_lmm_L %>%
filter(noun_onset>= 360 & noun_onset <= 3000)%>%
group_by(recording_name, subject_id, trial_number, media_name, age_centered,exp_centered, trial_lang)%>%
summarise(samples_total=sum(target==TRUE, target==FALSE ),
samples_target=sum(target))%>%
mutate(prop_looking= samples_target/samples_total)
#1) Maturation only
lmm_age_only_L <- lmer (prop_looking ~ age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_age_only_L)
#2) Experience only
lmm_experience_only_L <- lmer (prop_looking ~ exp_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_experience_only_L)
#3)Accumulator model
lmm_accumulator_L <- lmer (prop_looking ~ exp_centered * age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_accumulator_L)
#4) Additive Model
lmm_aditive_L <- lmer (prop_looking ~ exp_centered + age_centered + trial_lang + (1|subject_id) + (1|media_name), data = for_lmm_L)
summary(lmm_aditive_L) #<- SELECTED MODEL
